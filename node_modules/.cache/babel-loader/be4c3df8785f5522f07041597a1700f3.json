{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\food-order-app-dynamic\\\\src\\\\components\\\\Cart\\\\CheckoutForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./CheckOutForm.module.css\";\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === '';\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst CheckoutForm = props => {\n  _s();\n\n  const nameRef = useRef();\n  const streetRef = useRef();\n  const cityRef = useRef();\n  const pincodeRef = useRef();\n  const [formValidity, setFormValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    pincode: true\n  });\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameRef.current.value;\n    const enteredStreet = streetRef.current.value;\n    const enteredCity = cityRef.current.value;\n    const enteredPincode = pincodeRef.current.value;\n    const nameIsValid = !isEmpty(enteredName);\n    const streetIsValid = !isEmpty(enteredStreet);\n    const cityIsValid = !isEmpty(enteredCity);\n    const pincodeIsValid = isFiveChars(enteredPincode);\n    const formIsValid = nameIsValid && streetIsValid && cityIsValid && pincodeIsValid;\n    setFormValidity({\n      name: nameIsValid,\n      street: streetIsValid,\n      city: cityIsValid,\n      pincode: pincodeIsValid\n    });\n\n    if (!formIsValid) {\n      return;\n    }\n  };\n\n  const nameControlclasses = `${classes.control} ${formValidity.name ? '' : classes.invalid}`;\n  const streetControlclasses = `${classes.control} ${formValidity.street ? \"\" : classes.invalid}`;\n  const pincodeControlclasses = `${classes.control} ${formValidity.pincode ? \"\" : classes.invalid}`;\n  const cityControlclasses = `${classes.control} ${formValidity.city ? \"\" : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlclasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), !formValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlclasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), !formValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: pincodeControlclasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: pincodeRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), !formValidity.pincode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid Pincode of atleast 5 characters.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlclasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), !formValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutForm, \"4tK9BvcepsqjEcsINCOm9ek1HXA=\");\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["D:/React/food-order-app-dynamic/src/components/Cart/CheckoutForm.js"],"names":["classes","useRef","useState","isEmpty","value","trim","isFiveChars","length","CheckoutForm","props","nameRef","streetRef","cityRef","pincodeRef","formValidity","setFormValidity","name","street","city","pincode","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredCity","enteredPincode","nameIsValid","streetIsValid","cityIsValid","pincodeIsValid","formIsValid","nameControlclasses","control","invalid","streetControlclasses","pincodeControlclasses","cityControlclasses","form","actions","onClose","submit"],"mappings":"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","sourcesContent":["import classes from \"./CheckOutForm.module.css\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nconst isEmpty = value => value.trim() ==='';\r\nconst isFiveChars = value => value.trim().length === 5;\r\nconst CheckoutForm = (props) => {\r\n    const nameRef = useRef();\r\n    const streetRef = useRef();\r\n    const cityRef = useRef();\r\n    const pincodeRef = useRef();\r\n\r\n    \r\n    const [formValidity, setFormValidity] = useState({\r\n      name: true,\r\n      street: true,\r\n      city: true,\r\n      pincode: true,\r\n    });\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameRef.current.value;\r\n    const enteredStreet = streetRef.current.value;\r\n    const enteredCity = cityRef.current.value;\r\n    const enteredPincode = pincodeRef.current.value;\r\n\r\n    const nameIsValid = !isEmpty(enteredName);\r\n    const streetIsValid = !isEmpty(enteredStreet);\r\n    const cityIsValid = !isEmpty(enteredCity);\r\n    const pincodeIsValid = isFiveChars(enteredPincode);\r\n\r\n    const formIsValid = nameIsValid && streetIsValid && cityIsValid && pincodeIsValid;\r\n\r\n    setFormValidity({\r\n      name: nameIsValid,\r\n      street: streetIsValid,\r\n      city: cityIsValid,\r\n      pincode: pincodeIsValid\r\n    });\r\n\r\n    if(!formIsValid){\r\n        return;\r\n    }\r\n    \r\n  };\r\n  const nameControlclasses = `${classes.control} ${formValidity.name ? '': classes.invalid}`;\r\n  const streetControlclasses = `${classes.control} ${formValidity.street ? \"\" : classes.invalid}`;\r\n  const pincodeControlclasses = `${classes.control} ${formValidity.pincode ? \"\" : classes.invalid}`;\r\n  const cityControlclasses = `${classes.control} ${formValidity.city ? \"\" : classes.invalid}`;\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlclasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameRef} />\r\n        {!formValidity.name && <p>Please enter a valid name.</p>}\r\n      </div>\r\n      <div className={streetControlclasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id=\"street\" ref={streetRef} />\r\n        {!formValidity.street && <p>Please enter a valid street.</p>}\r\n      </div>\r\n      <div className={pincodeControlclasses}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\" ref={pincodeRef} />\r\n        {!formValidity.pincode && (\r\n          <p>Please enter a valid Pincode of atleast 5 characters.</p>\r\n        )}\r\n      </div>\r\n      <div className={cityControlclasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityRef} />\r\n        {!formValidity.city && <p>Please enter a valid city.</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onClose}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n"]},"metadata":{},"sourceType":"module"}