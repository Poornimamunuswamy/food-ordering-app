{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\food-order-app-dynamic\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(\"https://react-app-de313-default-rtdb.firebaseio.com\");\n      const responseData = await response.json(); //  console.log(responseData);\n\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setLoading(false);\n      setError(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"2LgVE+VRg8SPsDKY1OcR8RNvBjM=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["D:/React/food-order-app-dynamic/src/components/Meals/AvailableMeals.js"],"names":["Card","MealItem","classes","useEffect","useState","AvailableMeals","meals","setMeals","isLoading","setLoading","error","setError","fetchMeals","response","fetch","responseData","json","loadedMeals","key","push","id","name","description","price","catch","message","mealsLoading","mealsList","map","meal"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,SAAD,EAAYC,UAAZ,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAkBP,QAAQ,EAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMS,UAAU,GAAG,YAAW;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qDAAD,CAA5B;AACA,YAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B,CAF6B,CAG9B;;AACC,YAAMC,WAAW,GAAE,EAAnB;;AACC,WAAI,MAAMC,GAAV,IAAiBH,YAAjB,EAA8B;AAC9BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAACF,GADY;AAEfG,UAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFT;AAGfC,UAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHhB;AAIfC,UAAAA,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJV,SAAjB;AAMD;;AACDhB,MAAAA,QAAQ,CAACU,WAAD,CAAR;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACC,KAfD;;AAgBAG,IAAAA,UAAU,GAAGY,KAAb,CAAmBd,KAAK,IAAE;AACxBD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACD,KAAK,CAACe,OAAP,CAAR;AACD,KAHD;AAID,GArBQ,EAqBP,EArBO,CAAT;;AAuBA,MAAGjB,SAAH,EAAa;AACX,wBAAO;AAAS,MAAA,SAAS,EAAEN,OAAO,CAACwB,YAA5B;AAAA,6BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AAED,MAAGhB,KAAH,EAAS;AACP,wBACE;AAAS,MAAA,SAAS,EAAER,OAAO,CAACwB,YAA5B;AAAA,6BACE;AAAA,kBAAKhB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,QAAMiB,SAAS,GAAGrB,KAAK,CAACsB,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACT,EAFX;AAGE,IAAA,IAAI,EAAES,IAAI,CAACR,IAHb;AAIE,IAAA,WAAW,EAAEQ,IAAI,CAACP,WAJpB;AAKE,IAAA,KAAK,EAAEO,IAAI,CAACN;AALd,KACOM,IAAI,CAACT,EADZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAUA,sBACE;AAAS,IAAA,SAAS,EAAElB,OAAO,CAACI,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKqB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA5DD;;GAAMtB,c;;KAAAA,c;AA8DN,eAAeA,cAAf","sourcesContent":["import Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\n\n\nconst AvailableMeals = () => {\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError]=useState();\n\n  useEffect(()=>{\n    const fetchMeals = async () =>{\n     const response = await fetch(\"https://react-app-de313-default-rtdb.firebaseio.com\");\n     const responseData = await response.json();\n    //  console.log(responseData);\n     const loadedMeals =[];\n      for(const key in responseData){\n      loadedMeals.push({\n        id:key,\n        name: responseData[key].name,\n        description: responseData[key].description,\n        price: responseData[key].price\n      });\n    }\n    setMeals(loadedMeals);\n    setLoading(false);\n    } \n    fetchMeals().catch(error=>{\n      setLoading(false);\n      setError(error.message);\n    });\n  },[]);\n  \n  if(isLoading){\n    return <section className={classes.mealsLoading}>\n      <h1>Loading....</h1>\n    </section>\n  }\n\n  if(error){\n    return (\n      <section className={classes.mealsLoading}>\n        <h1>{error}</h1>\n      </section>\n    );\n  }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}