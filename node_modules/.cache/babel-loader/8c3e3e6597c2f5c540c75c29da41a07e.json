{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\food-order-app-dynamic\\\\src\\\\components\\\\Cart\\\\CheckoutForm.js\",\n    _s2 = $RefreshSig$();\n\nimport classes from \"./CheckOutForm.module.css\";\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === '';\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst CheckoutForm = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const nameRef = useRef();\n  const streetRef = useRef();\n  const cityRef = useRef();\n  const pincodeRef = useRef();\n\n  const confirmHandler = event => {\n    _s();\n\n    event.preventDefault();\n    const enteredName = nameRef.current.value;\n    const enteredStreet = streetRef.current.value;\n    const enteredCity = cityRef.current.value;\n    const enteredPincode = pincodeRef.current.value;\n    const nameIsValid = !isEmpty(enteredName);\n    const streetIsValid = !isEmpty(enteredStreet);\n    const cityIsValid = !isEmpty(enteredCity);\n    const pincodeIsValid = isFiveChars(enteredPincode);\n    const formIsValid = nameIsValid && streetIsValid && cityIsValid && pincodeIsValid;\n    const [formValidity, setFormValidity] = useState({\n      name: true,\n      street: true,\n      city: true,\n      pincode: true\n    });\n\n    if (!formIsValid) {\n      return;\n    }\n  };\n\n  _s(confirmHandler, \"7sMC0hxe1wKhCJLnOpeDYTFTgCY=\");\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: pincodeRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(CheckoutForm, \"OE3X37+9UA76+tXGShzLTc6HXak=\");\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["D:/React/food-order-app-dynamic/src/components/Cart/CheckoutForm.js"],"names":["classes","useRef","useState","isEmpty","value","trim","isFiveChars","length","CheckoutForm","props","nameRef","streetRef","cityRef","pincodeRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredCity","enteredPincode","nameIsValid","streetIsValid","cityIsValid","pincodeIsValid","formIsValid","formValidity","setFormValidity","name","street","city","pincode","form","control","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import classes from \"./CheckOutForm.module.css\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nconst isEmpty = value => value.trim() ==='';\r\nconst isFiveChars = value => value.trim().length === 5;\r\nconst CheckoutForm = (props) => {\r\n    const nameRef = useRef();\r\n    const streetRef = useRef();\r\n    const cityRef = useRef();\r\n    const pincodeRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameRef.current.value;\r\n    const enteredStreet = streetRef.current.value;\r\n    const enteredCity = cityRef.current.value;\r\n    const enteredPincode = pincodeRef.current.value;\r\n\r\n    const nameIsValid = !isEmpty(enteredName);\r\n    const streetIsValid = !isEmpty(enteredStreet);\r\n    const cityIsValid = !isEmpty(enteredCity);\r\n    const pincodeIsValid = isFiveChars(enteredPincode);\r\n\r\n    const formIsValid = nameIsValid && streetIsValid && cityIsValid && pincodeIsValid;\r\n\r\n    const [formValidity, setFormValidity] = useState({\r\n        name:true,\r\n        street: true,\r\n        city: true,\r\n        pincode: true\r\n    })\r\n\r\n    if(!formIsValid){\r\n        return;\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameRef}/>\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id=\"street\" ref={streetRef} />\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\" ref={pincodeRef}/>\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityRef}/>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n"]},"metadata":{},"sourceType":"module"}